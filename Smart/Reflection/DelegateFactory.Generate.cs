// <auto-generated />
namespace Smart.Reflection;

using System;
using System.Reflection;

public sealed partial class DelegateFactory
{
    public Func<object> CreateFactory0(ConstructorInfo ci)
    {
        return Factory.CreateFactory0(ci);
    }

    public Func<object, object> CreateFactory1(ConstructorInfo ci)
    {
        return Factory.CreateFactory1(ci);
    }

    public Func<object, object, object> CreateFactory2(ConstructorInfo ci)
    {
        return Factory.CreateFactory2(ci);
    }

    public Func<object, object, object, object> CreateFactory3(ConstructorInfo ci)
    {
        return Factory.CreateFactory3(ci);
    }

    public Func<object, object, object, object, object> CreateFactory4(ConstructorInfo ci)
    {
        return Factory.CreateFactory4(ci);
    }

    public Func<object, object, object, object, object, object> CreateFactory5(ConstructorInfo ci)
    {
        return Factory.CreateFactory5(ci);
    }

    public Func<object, object, object, object, object, object, object> CreateFactory6(ConstructorInfo ci)
    {
        return Factory.CreateFactory6(ci);
    }

    public Func<object, object, object, object, object, object, object, object> CreateFactory7(ConstructorInfo ci)
    {
        return Factory.CreateFactory7(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object> CreateFactory8(ConstructorInfo ci)
    {
        return Factory.CreateFactory8(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object, object> CreateFactory9(ConstructorInfo ci)
    {
        return Factory.CreateFactory9(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object, object, object> CreateFactory10(ConstructorInfo ci)
    {
        return Factory.CreateFactory10(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object, object, object, object> CreateFactory11(ConstructorInfo ci)
    {
        return Factory.CreateFactory11(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object, object, object, object, object> CreateFactory12(ConstructorInfo ci)
    {
        return Factory.CreateFactory12(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object, object, object, object, object, object> CreateFactory13(ConstructorInfo ci)
    {
        return Factory.CreateFactory13(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object, object, object, object, object, object, object> CreateFactory14(ConstructorInfo ci)
    {
        return Factory.CreateFactory14(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object> CreateFactory15(ConstructorInfo ci)
    {
        return Factory.CreateFactory15(ci);
    }

    public Func<object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object> CreateFactory16(ConstructorInfo ci)
    {
        return Factory.CreateFactory16(ci);
    }

    public Func<T> CreateFactory<T>()
    {
        return Factory.CreateFactory<T>();
    }

    public Func<TP1, T> CreateFactory<TP1, T>()
    {
        return Factory.CreateFactory<TP1, T>();
    }

    public Func<TP1, TP2, T> CreateFactory<TP1, TP2, T>()
    {
        return Factory.CreateFactory<TP1, TP2, T>();
    }

    public Func<TP1, TP2, TP3, T> CreateFactory<TP1, TP2, TP3, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, T>();
    }

    public Func<TP1, TP2, TP3, TP4, T> CreateFactory<TP1, TP2, TP3, TP4, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, TP15, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, TP15, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, TP15, T>();
    }

    public Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, TP15, TP16, T> CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, TP15, TP16, T>()
    {
        return Factory.CreateFactory<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TP9, TP10, TP11, TP12, TP13, TP14, TP15, TP16, T>();
    }

}
