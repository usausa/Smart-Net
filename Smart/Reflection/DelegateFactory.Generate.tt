// <auto-generated />
namespace Smart.Reflection
{
    using System;
    using System.Reflection;

    public sealed partial class DelegateFactory
    {
<# for (var i = 0; i <= 16; i++) { #>
        public Func<object<# for (var j = 0; j < i; j++) { #>, object<# } #>> CreateFactory<#= i #>(ConstructorInfo ci)
        {
            return Factory.CreateFactory<#= i #>(ci);
        }

<# } #>
    }
}
